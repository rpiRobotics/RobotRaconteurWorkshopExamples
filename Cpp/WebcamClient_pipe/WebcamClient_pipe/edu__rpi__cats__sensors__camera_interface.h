//This file is automatically generated. DO NOT EDIT!

#include <RobotRaconteur.h>
#include <boost/signals2.hpp>
#pragma once

namespace edu
{
namespace rpi
{
namespace cats
{
namespace sensors
{
namespace camera_interface
{

class Image;
class ImageHeader;
class Camera;

class Image : public RobotRaconteur::RRStructure {
public:
int32_t width;
int32_t height;
int32_t channels;
RR_SHARED_PTR<RobotRaconteur::RRArray<uint8_t > > data;

virtual std::string RRType() {return "edu.rpi.cats.sensors.camera_interface.Image";  }
};

class ImageHeader : public RobotRaconteur::RRStructure {
public:
int32_t width;
int32_t height;
int32_t channels;
uint8_t step;

virtual std::string RRType() {return "edu.rpi.cats.sensors.camera_interface.ImageHeader";  }
};

class Camera : public virtual RobotRaconteur::RRObject
{
public:
virtual RR_SHARED_PTR<Image > getCurrentImage()=0;

virtual RR_SHARED_PTR<ImageHeader > getImageHeader()=0;

virtual void StartStreaming()=0;

virtual void StopStreaming()=0;

virtual RR_SHARED_PTR<RobotRaconteur::Pipe<RR_SHARED_PTR<Image > > > get_ImageStream()=0;
virtual void set_ImageStream(RR_SHARED_PTR<RobotRaconteur::Pipe<RR_SHARED_PTR<Image > > > value)=0;

virtual std::string RRType() {return "edu.rpi.cats.sensors.camera_interface.Camera";  }
};

}
}
}
}
}

